@model architektura.Models.BUILD

@{
    ViewBag.Title = "Edit";
}
@using architektura.Models;
@{
    int idSTYL = Model.idSTYL;
    int idBUILD = Model.idBUILD;

    STYL styl = STYLService.getSTYLById(idSTYL);

}

<h2>Edit Build <b>@Model.buildname</b> in Style <b>@styl.name</b></h2>


@using (Html.BeginForm())
{
    @Html.AntiForgeryToken()

    <div class="form-horizontal">
        <h4>BUILD</h4>
        <hr />
        @Html.ValidationSummary(true, "", new { @class = "text-danger" })
        @Html.HiddenFor(model => model.idBUILD)

        <div class="form-group">
            @Html.LabelFor(model => model.buildname, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.buildname, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.buildname, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.city, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.city, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.city, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.country, htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => model.country, new { htmlAttributes = new { @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.country, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            @Html.LabelFor(model => model.idSTYL, "STYL", htmlAttributes: new { @class = "control-label col-md-2" })
            <div class="col-md-10">
                @Html.EditorFor(model => styl.name, new { htmlAttributes = new { disabled = "disabled", @class = "form-control" } })
                @Html.ValidationMessageFor(model => model.idSTYL, "", new { @class = "text-danger" })
            </div>
        </div>

        <div class="form-group">
            <div class="col-md-offset-2 col-md-10">
                <input type="submit" value="Save" class="btn btn-default" />
            </div>
        </div>
    </div>
}

<div>
    @Html.ActionLink("Back to " + @styl.name + "details", "Details", "STYL", new { id = styl.idSTYL }, new { @class = "btn btn-default" })
</div>

@section Scripts {
    @Scripts.Render("~/bundles/jqueryval")
}
