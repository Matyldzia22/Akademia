#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace architektura.Models
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="aspnet-architektura-20170201082245")]
	public partial class OperationDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region Extensibility Method Definitions
    partial void OnCreated();
    partial void InsertBUILD(BUILD instance);
    partial void UpdateBUILD(BUILD instance);
    partial void DeleteBUILD(BUILD instance);
    partial void InsertSTYL(STYL instance);
    partial void UpdateSTYL(STYL instance);
    partial void DeleteSTYL(STYL instance);
    #endregion
		
		public OperationDataContext() : 
				base(global::System.Configuration.ConfigurationManager.ConnectionStrings["DefaultConnection"].ConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public OperationDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OperationDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OperationDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public OperationDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<BUILD> BUILDs
		{
			get
			{
				return this.GetTable<BUILD>();
			}
		}
		
		public System.Data.Linq.Table<STYL> STYLs
		{
			get
			{
				return this.GetTable<STYL>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.DeleteSTYL")]
		public int DeleteSTYL([global::System.Data.Linq.Mapping.ParameterAttribute(DbType="Int")] System.Nullable<int> id)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), id);
			return ((int)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.BUILD")]
	public partial class BUILD : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idBUILD;
		
		private string _buildname;
		
		private string _city;
		
		private string _country;
		
		private int _idSTYL;
		
		private EntityRef<STYL> _STYL;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidBUILDChanging(int value);
    partial void OnidBUILDChanged();
    partial void OnbuildnameChanging(string value);
    partial void OnbuildnameChanged();
    partial void OncityChanging(string value);
    partial void OncityChanged();
    partial void OncountryChanging(string value);
    partial void OncountryChanged();
    partial void OnidSTYLChanging(int value);
    partial void OnidSTYLChanged();
    #endregion
		
		public BUILD()
		{
			this._STYL = default(EntityRef<STYL>);
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idBUILD", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idBUILD
		{
			get
			{
				return this._idBUILD;
			}
			set
			{
				if ((this._idBUILD != value))
				{
					this.OnidBUILDChanging(value);
					this.SendPropertyChanging();
					this._idBUILD = value;
					this.SendPropertyChanged("idBUILD");
					this.OnidBUILDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_buildname", DbType="NChar(60) NOT NULL", CanBeNull=false)]
		public string buildname
		{
			get
			{
				return this._buildname;
			}
			set
			{
				if ((this._buildname != value))
				{
					this.OnbuildnameChanging(value);
					this.SendPropertyChanging();
					this._buildname = value;
					this.SendPropertyChanged("buildname");
					this.OnbuildnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_city", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string city
		{
			get
			{
				return this._city;
			}
			set
			{
				if ((this._city != value))
				{
					this.OncityChanging(value);
					this.SendPropertyChanging();
					this._city = value;
					this.SendPropertyChanged("city");
					this.OncityChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_country", DbType="NChar(50) NOT NULL", CanBeNull=false)]
		public string country
		{
			get
			{
				return this._country;
			}
			set
			{
				if ((this._country != value))
				{
					this.OncountryChanging(value);
					this.SendPropertyChanging();
					this._country = value;
					this.SendPropertyChanged("country");
					this.OncountryChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSTYL", DbType="Int NOT NULL")]
		public int idSTYL
		{
			get
			{
				return this._idSTYL;
			}
			set
			{
				if ((this._idSTYL != value))
				{
					if (this._STYL.HasLoadedOrAssignedValue)
					{
						throw new System.Data.Linq.ForeignKeyReferenceAlreadyHasValueException();
					}
					this.OnidSTYLChanging(value);
					this.SendPropertyChanging();
					this._idSTYL = value;
					this.SendPropertyChanged("idSTYL");
					this.OnidSTYLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STYL_BUILD", Storage="_STYL", ThisKey="idSTYL", OtherKey="idSTYL", IsForeignKey=true)]
		public STYL STYL
		{
			get
			{
				return this._STYL.Entity;
			}
			set
			{
				STYL previousValue = this._STYL.Entity;
				if (((previousValue != value) 
							|| (this._STYL.HasLoadedOrAssignedValue == false)))
				{
					this.SendPropertyChanging();
					if ((previousValue != null))
					{
						this._STYL.Entity = null;
						previousValue.BUILDs.Remove(this);
					}
					this._STYL.Entity = value;
					if ((value != null))
					{
						value.BUILDs.Add(this);
						this._idSTYL = value.idSTYL;
					}
					else
					{
						this._idSTYL = default(int);
					}
					this.SendPropertyChanged("STYL");
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.STYL")]
	public partial class STYL : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _idSTYL;
		
		private string _name;
		
		private string _age;
		
		private string _picture;
		
		private EntitySet<BUILD> _BUILDs;
		
    #region Extensibility Method Definitions
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnidSTYLChanging(int value);
    partial void OnidSTYLChanged();
    partial void OnnameChanging(string value);
    partial void OnnameChanged();
    partial void OnageChanging(string value);
    partial void OnageChanged();
    partial void OnpictureChanging(string value);
    partial void OnpictureChanged();
    #endregion
		
		public STYL()
		{
			this._BUILDs = new EntitySet<BUILD>(new Action<BUILD>(this.attach_BUILDs), new Action<BUILD>(this.detach_BUILDs));
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_idSTYL", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int idSTYL
		{
			get
			{
				return this._idSTYL;
			}
			set
			{
				if ((this._idSTYL != value))
				{
					this.OnidSTYLChanging(value);
					this.SendPropertyChanging();
					this._idSTYL = value;
					this.SendPropertyChanged("idSTYL");
					this.OnidSTYLChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_name", DbType="NChar(40) NOT NULL", CanBeNull=false)]
		public string name
		{
			get
			{
				return this._name;
			}
			set
			{
				if ((this._name != value))
				{
					this.OnnameChanging(value);
					this.SendPropertyChanging();
					this._name = value;
					this.SendPropertyChanged("name");
					this.OnnameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_age", DbType="NChar(10) NOT NULL", CanBeNull=false)]
		public string age
		{
			get
			{
				return this._age;
			}
			set
			{
				if ((this._age != value))
				{
					this.OnageChanging(value);
					this.SendPropertyChanging();
					this._age = value;
					this.SendPropertyChanged("age");
					this.OnageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_picture", DbType="VarChar(1000)")]
		public string picture
		{
			get
			{
				return this._picture;
			}
			set
			{
				if ((this._picture != value))
				{
					this.OnpictureChanging(value);
					this.SendPropertyChanging();
					this._picture = value;
					this.SendPropertyChanged("picture");
					this.OnpictureChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.AssociationAttribute(Name="STYL_BUILD", Storage="_BUILDs", ThisKey="idSTYL", OtherKey="idSTYL")]
		public EntitySet<BUILD> BUILDs
		{
			get
			{
				return this._BUILDs;
			}
			set
			{
				this._BUILDs.Assign(value);
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
		
		private void attach_BUILDs(BUILD entity)
		{
			this.SendPropertyChanging();
			entity.STYL = this;
		}
		
		private void detach_BUILDs(BUILD entity)
		{
			this.SendPropertyChanging();
			entity.STYL = null;
		}
	}
}
#pragma warning restore 1591
